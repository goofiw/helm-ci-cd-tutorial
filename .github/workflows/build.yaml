name: Build and Push Image
on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build-push-image:
    runs-on: ubuntu-latest
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    steps:
      - run: echo "Build triggered by a ${{ github.event_name }} event."
      - name: Check out repository code
        uses: actions/checkout@v4
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2 
        with:
          role-to-assume: arn:aws:iam::${{ secrets.AWS_ACCOUNT_ID }}:role/gh-actions-ecr
          aws-region: us-east-2
      - name: Check if image exists
        id: check-image-lock
        run: |
          output=$(./.github/scripts/check-image.sh ${{ github.sha }})
          if echo "$output" | grep -q "STATUS:IMAGE_EXISTS"; then
            echo "Image exists"
          elif echo "$output" | grep -q "STATUS:ERROR"; then
            echo "Image timeout or build image error.  Exiting"
            exit 1;
          elif echo "$output" | grep -q "STATUS:IMAGE_LOCK_NOT_FOUND"; then
            echo "No image found, proceed with building"
            echo "BUILD_IMAGE=true" >> $GITHUB_OUTPUT
          else
            echo "Unknown check image script result"
            exit 2;
          fi
          echo "SELECTED_COLOR=green" >> $GITHUB_OUTPUT
      - name: Login to Amazon ECR
        if: ${{ steps.check-image-lock.BUILD_IMAGE }} == "true"
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
        with:
          mask-password: 'true'
      - name: Build, tag, and push docker image to Amazon ECR
        if: ${{ steps.check-image-lock.BUILD_IMAGE }} == "true"
        env:
          REPOSITORY: ${{ secrets.ECR_REPOSITORY }}
          IMAGE_TAG: ${{ github.sha }}
        run: |
          echo ${{ steps.check-image-lock.SELECTED_COLOR }}
          echo $CHECK_IF_WORK
          docker build -t $REPOSITORY:$IMAGE_TAG .
          docker push $REPOSITORY:$IMAGE_TAG
          echo "built" | aws s3 cp - s3://ci-image-lock-demo/${{ github.sha }}.txt
  deploy:
    runs-on: ubuntu-latest
    needs: ['build-push-image']
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    steps:
      - run: echo "Build triggered by a ${{ github.event_name }} event."
      - name: Check out repository code
        uses: actions/checkout@v4
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2 
        with:
          role-to-assume: arn:aws:iam::${{ secrets.AWS_ACCOUNT_ID }}:role/gh-actions-eks
          aws-region: us-east-2
      - name: Install Dependencies
        run: |
          curl https://raw.githubusercontent.com/helm/helm/master/scripts/get-helm-3 > get_helm.sh 
          chmod 700 get_helm.sh 
          ./get_helm.sh
          curl -LO https://dl.k8s.io/release/v1.27.5/bin/linux/amd64/kubectl
      - name: Deploy with Helm
        run: |
          aws eks --region us-east-2 update-kubeconfig --name education-eks-demo 
          helm upgrade --install --set image.repository=${{ secrets.ECR_REPOSITORY }} --set image.tag=${{ github.sha }} demo ./demo 
    
